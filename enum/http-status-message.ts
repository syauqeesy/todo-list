import { HttpStatusCode } from "./http-status-code";

export const HttpStatusMessage: { [key in HttpStatusCode]: string } = {
  [HttpStatusCode.OK]: "ok",
  [HttpStatusCode.Created]: "created",
  [HttpStatusCode.Accepted]: "accepted",
  [HttpStatusCode.NonAuthoritativeInformation]: "non-authoritative information",
  [HttpStatusCode.NoContent]: "no content",
  [HttpStatusCode.ResetContent]: "reset content",
  [HttpStatusCode.PartialContent]: "partial content",

  [HttpStatusCode.BadRequest]: "bad request",
  [HttpStatusCode.Unauthorized]: "unauthorized",
  [HttpStatusCode.PaymentRequired]: "payment required",
  [HttpStatusCode.Forbidden]: "forbidden",
  [HttpStatusCode.NotFound]: "not found",
  [HttpStatusCode.MethodNotAllowed]: "method not allowed",
  [HttpStatusCode.NotAcceptable]: "not acceptable",
  [HttpStatusCode.ProxyAuthenticationRequired]: "proxy authentication required",
  [HttpStatusCode.RequestTimeout]: "request timeout",
  [HttpStatusCode.Conflict]: "conflict",
  [HttpStatusCode.Gone]: "gone",
  [HttpStatusCode.LengthRequired]: "length required",
  [HttpStatusCode.PreconditionFailed]: "precondition failed",
  [HttpStatusCode.PayloadTooLarge]: "payload too large",
  [HttpStatusCode.URITooLong]: "uri too long",
  [HttpStatusCode.UnsupportedMediaType]: "unsupported media type",
  [HttpStatusCode.RangeNotSatisfiable]: "range not satisfiable",
  [HttpStatusCode.ExpectationFailed]: "expectation failed",
  [HttpStatusCode.MisdirectedRequest]: "misdirected request",
  [HttpStatusCode.UnprocessableEntity]: "unprocessable entity",
  [HttpStatusCode.Locked]: "locked",
  [HttpStatusCode.FailedDependency]: "failed dependency",
  [HttpStatusCode.TooEarly]: "too early",
  [HttpStatusCode.UpgradeRequired]: "upgrade required",
  [HttpStatusCode.PreconditionRequired]: "precondition required",
  [HttpStatusCode.TooManyRequests]: "too many requests",
  [HttpStatusCode.RequestHeaderFieldsTooLarge]:
    "request header fields too large",
  [HttpStatusCode.UnavailableForLegalReasons]: "unavailable for legal reasons",

  [HttpStatusCode.InternalServerError]: "internal server error",
  [HttpStatusCode.NotImplemented]: "not implemented",
  [HttpStatusCode.BadGateway]: "bad gateway",
  [HttpStatusCode.ServiceUnavailable]: "service unavailable",
  [HttpStatusCode.GatewayTimeout]: "gateway timeout",
  [HttpStatusCode.HTTPVersionNotSupported]: "http version not supported",
  [HttpStatusCode.VariantAlsoNegotiates]: "variant also negotiates",
  [HttpStatusCode.InsufficientStorage]: "insufficient storage",
  [HttpStatusCode.LoopDetected]: "loop detected",
  [HttpStatusCode.NotExtended]: "not extended",
  [HttpStatusCode.NetworkAuthenticationRequired]:
    "network authentication required",
};
